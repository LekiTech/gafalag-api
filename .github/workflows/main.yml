name: Deploy to Staging

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Allows to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
# TODO: rewrite for docker support
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout files
      uses: actions/checkout@v2
      
    - name: Install doctl for DigitalOcean
      uses: digitalocean/action-doctl@v1
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
        
    - name: Set up Docker Builder
      uses: docker/setup-buildx-action@v1
        
    - name: Authenticate with DigitalOcean Container Registry
      run: doctl registry login --expiry-seconds 180
      
    - name: Build and Push to DigitalOcean Container Registry
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        # REPLACE "cr-bp-web-backend" with your own container registry 
        # REPLACE name "bp-web-backend" with a suitable name for your app image
        tags: |
          registry.digitalocean.com/gafalag/gafalag-api:latest
          registry.digitalocean.com/gafalag/gafalag-api:sha-${{ github.sha }}
      
  deploy:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout files
        uses: actions/checkout@v2

      # Droplets already have docker, doctl + auth, and curl installed
      # REPLACE "bp-web-backend" with image name used in build job
      - name: Deploy bp-web-backend to DigitalOcean Droplet
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.DIGITALOCEAN_DROPLET_HOST }}
          username: root
          key: ${{ secrets.DIGITALOCEAN_API_KEY }}
          port: 22
          # REPLACE "bp-web-backend" with image name used in build job
          # REPLACE "cr-bp-web-backend" with your own container registry
          script: |
            doctl registry login --expiry-seconds 180
            docker pull registry.digitalocean.com/gafalag/gafalag-api:latest
            echo "calling shutdown endpoint..."
            curl --silent http://localhost/shutdown || true
            echo "giving healthcheck time to fail..."
            sleep 30 # ((unhealthy + 1) * interval)
            
            echo "removing unused images..."
            docker image prune -a
            echo "stopping and removing running container..."
            docker stop gafalag-api || true
            docker rm gafalag-api || true
            echo "starting server instance..."
            docker run -d \
              --restart always \
              -p 0.0.0.0:80:8080 \
              --name gafalag-api \
              registry.digitalocean.com/gafalag/gafalag-api:latest
